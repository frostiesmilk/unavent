<?php

namespace Flowber\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Flowber\UserBundle\Entity\User;

/**
 * FriendshipRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FriendshipRepository extends EntityRepository
{
    /*
     * Est ce que la personne est ami avec moi
     * Return boolean
     */
    public function isFriendWithMe(User $user, User $me){
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
            ->from('FlowberUserBundle:Friendship', 'a')
            ->where('a.user = :user')
            ->setParameter('user', $me)
            ->andWhere('a.friend = :friend')
            ->setParameter('friend', $user)
            ->andWhere('a.statut = :statut')
            ->setParameter('statut', 'ok');
        
        return count($qb->getQuery()->getResult());
    }

    /*
     * Est ce que le user from a envoyé une demande d'ami au user to
     * return boolean
     */
    public function hasSentAFriendRequest(User $from,  User $to){
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
            ->from('FlowberUserBundle:Friendship', 'a')
            ->where('a.user = :user')
            ->setParameter('user', $from)
            ->andWhere('a.friend = :friend')
            ->setParameter('friend', $to)
            ->andWhere('a.statut = :statut')
            ->setParameter('statut', 'send');

        return count($qb->getQuery()->getResult());
    }
    
    /*
     * Récupère la demande de l'user from au user to
     * return Friendship
     */
    public function getFriendship(User $from,  User $to){
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
            ->from('FlowberUserBundle:Friendship', 'a')
            ->where('a.user = :user')
            ->setParameter('user', $from)
            ->andWhere('a.friend = :friend')
            ->setParameter('friend', $to);

        return $qb->getQuery()->getSingleResult();
    }
    
    /*
     * Récupère les amis confirmés d'un utilisateur
     * Return name and id of the friends of $user
     */
    public function getFriendsForProfile(User $user){
       
        $query = $this->_em->createQuery(
            'SELECT concat(concat(user.firstname, :espace), user.surname) as name, user.id
            FROM FlowberUserBundle:Friendship fs
            JOIN FlowberUserBundle:User user
            WHERE fs.friend = user.id
            AND fs.statut = :statut
            WHERE fs.user = :user'
        )->setParameter('user', $user)
        ->setParameter('statut', 'ok')
        ->setParameter('espace', ' ');
        return $query->getResult();   
    
        
    }
    
    /*
     * Récupère le nombre d'ami d'un utilisateur
     * Return entier
     */
    public function getFriendsNumber($user){
        
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
            ->from('FlowberUserBundle:Friendship', 'a')
            ->where('a.user = :user')
            ->setParameter('user', $user)
            ->andWhere('a.statut = :statut')
            ->setParameter('statut', 'ok');            
        return count($qb->getQuery()->getResult());
    }
}
