<?php

namespace Flowber\GalleryBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

use Flowber\CircleBundle\Entity\Circle;
use Flowber\GalleryBundle\Entity\Gallery;

/**
 * GalleryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GalleryRepository extends EntityRepository
{
    /**
     * 
     * @param Circle $circle
     * @return array of galleries Ids of circle
     */
    public function getGalleriesIdsFromCircle(Circle $circle){     
        
        $sql = 'SELECT cg.gallery_id '
                . 'FROM circle_gallery cg '
                . 'WHERE circle_id = :circleId '
                . 'AND cg.gallery_id IN (SELECT g.id FROM gallery g WHERE g.deleted=0) ';

        $rsm = new ResultSetMapping();
        $rsm->addScalarResult('gallery_id', 'id');
        
        $queryResult =  $this->getEntityManager()->createNativeQuery($sql, $rsm)
                ->setParameter('circleId', $circle->getId())
                ->getResult();    
        
        $result = array();
        
        foreach($queryResult AS $gallery){
            $result[] = $gallery['id'];
        }
        
        return $result;
    }
    
    public function setDeleted(Gallery $gallery, $choice){
        $galleryId = $gallery->getId();
        
        $qb = $this->_em->createQueryBuilder();
        
        $datetime = new \Datetime();
        $now = $datetime->format("Y-m-d H:i:s");
        
        $query = $qb->update('FlowberGalleryBundle:Gallery', 'a')
            ->set('a.deleted', '?1')
            ->set('a.deleteDate', ':now')
            ->where('a.id = :id')
            ->setParameter('id', $galleryId)
            ->setParameter('now', $now)
            ->setParameter(1, $choice)
            ->getQuery();
        
        return $query->execute();
    }
}
