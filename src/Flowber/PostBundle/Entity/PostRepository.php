<?php

namespace Flowber\PostBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
    /*
     * Récupère les posts d'un groupe
     * Return id, message, statut, event, nom du created by, photo du created by, creationdate
     */
    public function getPost($id){
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
            ->from('FlowberPostBundle:Post', 'a')
            ->where('a.circle = :id')
            ->setParameter('id', $id)          
            ->andWhere('a.status != :status')
            ->setParameter('status', '0')
            ->orderBy('a.creationDate', 'DESC');
        
        return $qb->getQuery()
                  ->getResult();
    }
       
    /*
     * Récupère les commentaire
     * Return id, message, nom du created by, photo du created by, creationdate
     */    
    public function getCommentFromPost($postId){
        $qb = $this->_em->createQueryBuilder();
        
        $qb->select('a')
            ->from('FlowberPostBundle:Comment', 'a')
            ->where('a.post = :postId')
            ->setParameter('postId', $postId)          
            ->andWhere('a.status != :status')
            ->setParameter('status', '0')
            ->orderBy('a.creationDate', 'DESC');
        
        return $qb->getQuery()->getResult();
    }
    
    public function hasUserLikedPost($post, $user){        
        $rsm = new ResultSetMapping();
        $rsm->addScalarResult('id', 'id');

        $sql = 'SELECT l.id id '
                . 'FROM post_likes AS pl, likes AS l '
                . 'WHERE pl.post_id = '.$post->getId().' '
                . 'AND l.created_by_id = '.$user->getId();

        $query = $this->_em->createNativeQuery($sql, $rsm);

        $result = $query->getResult();
        
        return count($result)>0;
    }
}