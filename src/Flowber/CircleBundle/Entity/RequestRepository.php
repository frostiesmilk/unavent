<?php

namespace Flowber\CircleBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Flowber\CircleBundle\Entity\Circle;

/**
 * RequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RequestRepository extends EntityRepository
{
    public function getInfosRequest($id){  
        $sql = "SELECT a.id, a.sender_id, a.circle_id, a.statut, a.role, a.message, a.creationDate "
                . "FROM request a, request_circle b "
                . "WHERE b.circle_id = ".$id." AND b.request_id=a.id AND a.statut='sent' "
                . "ORDER BY a.creationDate desc";
       
        $rsm = new ResultSetMapping;
        $rsm->addScalarResult('sender_id', 'senderId');
        $rsm->addScalarResult('id', 'requestId');
        $rsm->addScalarResult('circle_id', 'circleId');
        $rsm->addScalarResult('statut', 'statut');
        $rsm->addScalarResult('role', 'role');
        $rsm->addScalarResult('message', 'message');
        $rsm->addScalarResult('creationDate', 'creationDate');
        
        return $this->getEntityManager()->createNativeQuery($sql, $rsm)->getResult();    
    }
    
    public function getRequest($id){  
        $em = $this->getDoctrine()->getManager();
        $query = $em->createQuery(
            'SELECT p
            FROM Circle:Request p
            WHERE p.id = :id
            ORDER BY p.creationDate ASC'
        )->setParameter('id', $id);

        $products = $query->getResult(); 
    }
    
    public function getRequestWithCircleUser($circleId, $currentUser){  
        $sql = "SELECT a.id "
                . "FROM request a "
                . "WHERE a.circle_id = ".$circleId." AND a.sender_id=".$currentUser." "
                . "ORDER BY a.creationDate desc";
       
        $rsm = new ResultSetMapping;
        $rsm->addScalarResult('id', 'requestId');
        
        return $this->getEntityManager()->createNativeQuery($sql, $rsm)->getSingleResult();   
    }
    
    public function getSubscriptionWithCircleUser($circle, $currentUser){  

         $query = $this->_em->createQuery(
            'SELECT p
            FROM FlowberCircleBundle:Subscribers p
            WHERE p.circle = :circle
            AND  p.subscriber = :user'
        )->setParameter('circle', $circle)
        ->setParameter('user', $currentUser);

        return $query->getSingleResult(); 
    }
      
}
