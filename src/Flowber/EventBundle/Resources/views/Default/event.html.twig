{# empty Twig template #}
{% extends '::base_frontoffice.html.twig' %}

{% block stylesheets %}
    {{parent()}}
    <link rel="stylesheet" href="{{ asset('bundles/wybefrontoffice/css/event.css') }}"/>
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 250px;
        margin:22px;
      }
     </style>
{% endblock %}

{% block smallMenu %}
    {{parent()}}
    <!-- BEGIN small screen menu -->
    {% include 'WybeFrontOfficeBundle::partials/event/event-navbar-small.html.twig' %}
    <!-- END small screen menu -->
{% endblock %}

{% block body %}
    
    <!-- navbar top -->
    {% include 'FlowberFrontOfficeBundle::partials/common/main-connected-navbar.html.twig' %}

    <!-- User Banner -->  
    {% include 'FlowberEventBundle::partials/eventCover.html.twig' %}
 
    <!-- Second navbar -->
 

    <!-- page -->
     {% include 'FlowberEventBundle::partials/eventContent.html.twig' %}
   
    <!-- footer -->                  
    {% include 'WybeFrontOfficeBundle::partials/common/footer.html.twig' %}

   
{% endblock %}

{% block javascripts %}
    {{parent()}}
        
    <script>
function initMap() {
  var chicago = new google.maps.LatLng{{result.coordinates}};

  var map = new google.maps.Map(document.getElementById('map'), {
    center: chicago,
    zoom: 14
  });

  var coordInfoWindow = new google.maps.InfoWindow();
  coordInfoWindow.setContent(createInfoWindowContent(chicago, map.getZoom()));
  coordInfoWindow.setPosition(chicago);
  coordInfoWindow.open(map);

  map.addListener('zoom_changed', function() {
    coordInfoWindow.setContent(createInfoWindowContent(chicago, map.getZoom()));
    coordInfoWindow.open(map);
  });
}

var TILE_SIZE = 256;

function createInfoWindowContent(latLng, zoom) {
  var scale = 1 << zoom;

  var worldCoordinate = project(latLng);

  var pixelCoordinate = new google.maps.Point(
      Math.floor(worldCoordinate.x * scale),
      Math.floor(worldCoordinate.y * scale));

  var tileCoordinate = new google.maps.Point(
      Math.floor(worldCoordinate.x * scale / TILE_SIZE),
      Math.floor(worldCoordinate.y * scale / TILE_SIZE));

  return [
    '{{result.title}}',
    '{{result.name}}, ',
    '{{ result.startDate|date("\\l\\e d/m/Y", "Europe/Paris") }} {{ result.startTime|date("\\Ã  H:i", "Europe/Paris") }}, ',
  ].join('<br>');
}

// The mapping between latitude, longitude and pixels is defined by the web
// mercator projection.
function project(latLng) {
  var siny = Math.sin(latLng.lat() * Math.PI / 180);

  // Truncating to 0.9999 effectively limits latitude to 89.189. This is
  // about a third of a tile past the edge of the world tile.
  siny = Math.min(Math.max(siny, -0.9999), 0.9999);

  return new google.maps.Point(
      TILE_SIZE * (0.5 + latLng.lng() / 360),
      TILE_SIZE * (0.5 - Math.log((1 + siny) / (1 - siny)) / (4 * Math.PI)));
}

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDu4slAxOS7yprod9nmIS1AZm3LC9gk_2Q&signed_in=true&libraries=places&callback=initMap"
    async defer></script>    
    
    <script type="text/javascript">
        $('#eventNavbar a').click(function (e) {
            e.preventDefault()
            $(this).tab('show')
        })

        $("#newPostTextArea, #newMailToHost").keyup(function(e) {
            while($(this).outerHeight() < this.scrollHeight + parseFloat($(this).css("borderTopWidth")) + parseFloat($(this).css("borderBottomWidth"))) {
                $(this).height($(this).height()+1);
            };
        });
    </script>

{% endblock %}